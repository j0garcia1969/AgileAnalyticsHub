@model WebApplicationCapstone.Models.TaskModel
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    input[type=text],
    input[type=number],
    select {
        display: block;
        width: 100%;
        height: 34px;
        padding: 6px 12px;
        font-size: 14px;
        line-height: 1.42857143;
        color: #555;
        background-color: #fff;
        background-image: none;
        border: 1px solid #ccc;
        border-radius: 4px;
        -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075);
        box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075);
        -webkit-transition: border-color ease-in-out .15s, -webkit-box-shadow ease-in-out .15s;
        -o-transition: border-color ease-in-out .15s, box-shadow ease-in-out .15s;
        transition: border-color ease-in-out .15s, box-shadow ease-in-out .15s;
    }

    textarea {
        display: block;
        width: 100%;
        height: 100px;
        padding: 6px 12px;
        font-size: 14px;
        line-height: 1.42857143;
        color: #555;
        background-color: #fff;
        background-image: none;
        border: 1px solid #ccc;
        border-radius: 4px;
        -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075);
        box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075);
        -webkit-transition: border-color ease-in-out .15s, -webkit-box-shadow ease-in-out .15s;
        -o-transition: border-color ease-in-out .15s, box-shadow ease-in-out .15s;
        transition: border-color ease-in-out .15s, box-shadow ease-in-out .15s;
    }
</style>

<h2>Edit</h2>

<h4>Task</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        @using (Html.BeginForm("EditTask", "Experimenter", FormMethod.Post))
        {
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                @Html.LabelFor(model => model.SelectedTaskTypeID)
                @Html.DropDownListFor(model => model.SelectedTaskTypeID, new SelectList(Model.TaskTypes, "value", "text"), new { @onchange = "taskTypeChange(this.value)" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.TaskItem)
                @Html.TextAreaFor(model => model.TaskItem, new { htmlAttributes = new { placeholder = "Task Item" } })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Duration)
                @Html.EditorFor(model => model.Duration, new { htmlAttributes = new { placeholder = "Duration" } })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.SelectedFeedbackTypeID)
                @Html.DropDownListFor(model => model.SelectedFeedbackTypeID, Model.FeedbackTypes)
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        }
    </div>
</div>

<div>
    @Html.ActionLink("Back to List", "Configuration", "Experimenter")
</div>
<script src="~/Scripts/jquery-3.3.1.js"></script>
<script src="~/Scripts/script.js"></script>

