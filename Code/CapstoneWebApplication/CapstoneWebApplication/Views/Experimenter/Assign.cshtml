@model WebApplicationCapstone.Models.ExamModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";

    if (Session["user_id"] == null)
    {
        Response.Redirect("~/Account/Index");
    }
}

<style>
    input[type=text],
    input[type=number],
    select {
        display: block;
        width: 100%;
        height: 34px;
        padding: 6px 12px;
        font-size: 14px;
        line-height: 1.42857143;
        color: #555;
        background-color: #fff;
        background-image: none;
        border: 1px solid #ccc;
        border-radius: 4px;
        -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075);
        box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075);
        -webkit-transition: border-color ease-in-out .15s, -webkit-box-shadow ease-in-out .15s;
        -o-transition: border-color ease-in-out .15s, box-shadow ease-in-out .15s;
        transition: border-color ease-in-out .15s, box-shadow ease-in-out .15s;
    }

    textarea {
        display: block;
        width: 100%;
        height: 100px;
        padding: 6px 12px;
        font-size: 14px;
        line-height: 1.42857143;
        color: #555;
        background-color: #fff;
        background-image: none;
        border: 1px solid #ccc;
        border-radius: 4px;
        -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075);
        box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075);
        -webkit-transition: border-color ease-in-out .15s, -webkit-box-shadow ease-in-out .15s;
        -o-transition: border-color ease-in-out .15s, box-shadow ease-in-out .15s;
        transition: border-color ease-in-out .15s, box-shadow ease-in-out .15s;
    }
</style>

<h2>Assign</h2>

<hr />
<div class="row">
    <div class="col-md-4">
        @using (Html.BeginForm("PopulateListGroup", "Experimenter", FormMethod.Post))
        {
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                @Html.LabelFor(model => model.SelectedStudyID)
                @Html.DropDownListFor(model => model.SelectedStudyID, new SelectList(Model.StudyType, "value", "text"), "-- Select Study --", new { @class = "form-control", @onchange = "form.submit();" })
                @*@Html.DropDownListFor(model => model.SelectedStudyID, new SelectList(Model.StudyType, "value", "text"))*@
            </div>
        }
        @using (Html.BeginForm("PopulateListSubject", "Experimenter", FormMethod.Post))
        {
            <div class="form-group">
                @Html.LabelFor(model => model.SelectedGroupID)
                @Html.DropDownListFor(model => model.SelectedGroupID, new SelectList(Model.GroupType, "value", "text"), "-- Select Group --", new { @class = "form-control", @onchange = "form.submit();" })
            </div>
        }
        @using (Html.BeginForm("PopulateListSession", "Experimenter", FormMethod.Post))
        {
            <div class="form-group">
                @Html.LabelFor(model => model.SelectedSubjectID)
                @Html.DropDownListFor(model => model.SelectedSubjectID, new SelectList(Model.SubjectType, "value", "text"), "-- Select Subject --", new { @class = "form-control", @onchange = "form.submit();" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.SelectedSessionID)
                @Html.DropDownListFor(model => model.SelectedSessionID, new SelectList(Model.SessionType, "value", "text"), "-- Select Session --", new { @class = "form-control" })
            </div>
        }
        @using (Html.BeginForm("AssignConfiguration", "Experimenter", FormMethod.Post))
        {
            <div class="form-group">
                <input type="submit" value="Assign" class="btn btn-default" />
                @*<input type="submit" value="Create New Config" class="btn btn-default" />*@
            </div>
        }
        @Html.ActionLink("Create New Configuration", "Configuration", "Experimenter")
        &nbsp;
        &nbsp;
        @Html.ActionLink("Export To CSV", "ExportToCSV")
    </div>
</div>